#summary How to use software tools to construct Awesomeguy levels
#sidebar TableOfContents
<wiki:toc max_depth="3" />
= Introduction =

I plan to outline how to create new Awesomeguy levels here. Awesomeguy levels are incorporated in an 'awesomeguy.xml' file, and currently to use custom levels you need to build your own xml file and then include it in the Eclipse Java project (which can be downloaded from this site. See: [http://code.google.com/p/awesomeguy/source/checkout http://code.google.com/p/awesomeguy/source/checkout]) and then make your own version of Awesomeguy from that. Soon a way will be made for the awesomeguy.xml file that you create to be loaded automatically from the android phone's sdcard. When that change has been made to the program this file will be updated. It is obvious that building the entire Eclipse Java project for Awesomeguy yourself just to incorporate your own levels in the game is a bit much for most readers, but for programmers the process wouldn't bee so difficult, and in any case the technical reader might find description of the process gives some incite into how the Awesomeguy game works in general.

===Tools and Programs===

The process requires that you have a working version of the 'Mappy' program. This program works well under Windows and in Linux under WINE. It can be found at [http://www.tilemap.co.uk/ www.tilemap.co.uk]. Mappy is free.

A copy of the Awesomeguy tilesheet is needed. This can be found in the SVN repository of the program, in the folder awesomeguy/res/drawable. The file to use is any one of the 'png' files that start with the 'tiles' prefix. It may be necessary to check out the entire project in order to download this file. The tile may also be available on the Awesomeguy download page. See: [http://code.google.com/p/awesomeguy/downloads/list http://code.google.com/p/awesomeguy/downloads/list]

A good text editor is required for the editing of the output of the Mappy program. It is also required for the constructing of the basic awesomeguy xml file before the Mappy data is added to it.

The 'sed' command was used to edit the Mappy data. The 'sed' command may not be available on all systems. On Windows systems it may be necessary to install cygwin or mingw to use 'sed'.

===Basic Structure===

Since the file that we are trying to create is an xml file, it has a somewhat strict structure. Below is an example of the structure of the file if only two levels were added.

{{{
<?xml version="1.0" ?>
<game>
<level number="1">
<horizontal>64</horizontal>
<vertical>32</vertical>
<tiles_level>
	... this is where your mappy data
	goes for level 1 ...
</tiles_level>
<tiles_objects>
	... this is where your mappy data
	goes for level 1 ...
</tiles_objects>
<last_level>false</last_level>
</level>

<level number="2">
<horizontal>64</horizontal>
<vertical>32</vertical>
<tiles_level>
	... this is where your mappy data
	goes for level 2 ...
</tiles_level>
<tiles_objects>
	... this is where your mappy data
	goes for level 2 ...
</tiles_objects>
<last_level>true</last_level>
</level>

</game>
}}}

The data that's stored in the xml file in the spaces between the tiles_level tags and between the tiles_objects tags is in the form of comma separated values. These tables of comma separated values are large and are not shown in the listing above.

Note that the original awesomeguy.xml file holds ten levels, and at this time your xml file must hold ten levels also. For this reason someone looking to experiment with a single level might have better luck editing the original xml file with a text editor rather than try to create all ten required levels all at once.

Also note that there is a place in each level definition block for the horizontal and vertical dimensions of the level. It is important to fill these tags with the correct info from the Mappy program. They cannot be left blank and they cannot have the wrong value. Also note that the number of entries in the tiles_level tags must be the same as the number of entries in the tiles_objects tags. The Awesomeguy program uses the 'horizontal' and 'vertical' attributes in the xml file to turn the comma separated values into two identically sized tables. These tables are used by the game to draw the background of each level.

=Editing Your Level=

The first step to making a level is to know what your finished level will be like before you start. Make a sketch or diagram to work from, or develop a detailed plan in your head. One consideration is the size of the level. The level cannot be larger than 96 x 96 tiles, but it cannot be smaller than 32 tiles horizontal and 24 tiles vertical. If your map is smaller than this it will not display correctly on the screen and the game may crash.

===The Tilesheet===

The tilesheet that has been created for Awesomeguy is very simple. There are three kinds of tiles. Firstly there are the colorful tiles that represent blocks and platforms and ladders. These are the vast majority of the tiles. 

Then there are the blocks that are used strictly on the 'objects' array. These have special meaning for the game. There are approximately 12 of them. Eleven of them are located at the very bottom-right of the tilesheet. Their meanings will be discussed below. The twelfth one is located at tile nuber 5, and when it's used it represents the starting point for the main character. It's only separated from the other 11 because the tilesheet has evolved slightly over time and the tile in question was the first _special_ tile. It was given index number 5 and then that index number was not changed over time. The other special tiles were added later.

The third group of tiles is the number tiles. These tiles have all the info needed to print the numbers 0 through 9 and the two words 'level' and 'score'. Some versions of the program use this info to print the score on the screen. When creating levels for Awesomeguy you should generally avoid these tiles.

===Setting Up Mappy===

Mappy is a complicated program and we only use a small portion of its functionality when we edit our levels. To start the editing process the first step is to start Mappy and go to the 'file' pull-down menu. Choose the 'New Map' option. The program displays a dialog window at this point. The window says 'Mappy: New Map (easy)'. Values in this dialog must be changed. The dialog says: 'Each tile is 32 pixels wide and 32 pixels high.' This must be changed so that the numbers '32' are replaced with the numbers '8'. Remember that each of our tiles is 8x8. 

Do not dismiss the 'New Map' dialog yet. We must enter the ultimate size of our map in the spaces provided before we move on. The default says 'I want my map to be 100 tiles wide and 100 tiles high'. If we leave these values at their default the game will not run. The values must be lowered to at least 96, but you may decide to make them much lower than that. Remember these values because you need to use them in the xml file inside the 'horizontal' and 'vertical' tags.

The 'New Map' dialog also has settings for Colors, which are in the form of radio buttons for 'True Color' or 'Paletted (8 bit)' color. For our purposes the default works fine. Click 'OK'. Another dialog pops up to remind you to load the tilesheet. That's the next step.

Go to the 'File' pull-down menu again and select the 'Import...' option. A box opens that allows you to specify which file to use as your tilesheet. Use the 'tiles1.png' file that you download from the Awesomeguy Downloads site. See: http://code.google.com/p/awesomeguy/downloads/list . If you are having trouble using ping files with Mappy, go to the Mappy site and follow instructions there for adding ping support to your Mappy installation. See: http://www.tilemap.co.uk/pngfiles.html .

===Using Mappy===

At this point we start editing the actual layers that will become our game arrays. When we get to this step the Mappy program automatically creates one blank map layer for us. It is called 'Layer 0' in the 'Layer' menu. We can use this layer for the 'level' array that we need for our game. Later we'll add another layer for the 'objects' array. Before we do anything else, though, this might be a good time to save the Mappy file that we've created so far. This gives us a chance to name the file. Simple names are best, but it really doesn't matter what you name it. Mappy files have the '.fmp' filename extension. 

The object of our editing right now is to add all the blocks that go into how the level looks _without_ rings or prizes or goals. Essentially you have to imagine that you are adding colorful bricks that we will later turn into hard surfaces. You can add ladders at this stage also. Do not add any monsters or special characters. These blocks are going to be what the player sees. They do not effect what actually happens in the game, so if you use blocks that are designed for special purposes the player will be confused. They will not work properly.

To place a block on layer 0, select the block from the right-hand panel of the Mappy editor and move the cursor over the left hand panel. The left hand panel represents your array editing area. Click anywhere here to place the block on the screen. When you've created a screen that has all the visible architectural elements (walls and floors and ladders and pillars) you can go on to the next stage.

===Adding A Layer===

Go to the 'Layer' menu and select the 'Add Layer' option. You are now working with two layers. By default the new layer is called 'New layer'. To switch between layers, go to the 'Layer' menu and select the layer that you are interested in. The active layers should be printed in bold type, and the one that you are editing should have a check mark next to it. You should have two layers now called 'layer 0' and 'New layer'.