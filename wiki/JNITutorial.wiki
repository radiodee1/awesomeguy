#summary A simple tutorial for writing and compiling JNI code for the Android platform
#sidebar TableOfContents
= Introduction =

Here we'll go through the steps of writing your own JNI library to use with the Android platform. We'll also touch on setting up your Android app editing environment using Eclipse.

<wiki:toc max_depth="5" />

= Overview =

Before you create your Android JNI file you need a working project, and before that you need a working development environment. In this tutorial we'll briefly cover setting up your eclipse IDE for java development, and we'll go on to cover Android JNI/NDK.

JNI stands for 'Java Native Interface' and NDK stands for 'Native Development Kit'. We'll use the two terms somewhat interchangeably but they could also be used to define very specific and different things. JNI could be used to define all Java applications that use native code, whereas NDK would be more related to the Android system in specific.

=Setup Environment=

Here we'll start looking at Eclipse and Android plugins. Awesomeguy was programmed on a debian-based linux computer. Instructions for installing software are generally written with a linux operating system in mind. However, Android apps can be successfully written on Windows computers, and all of the tools mentioned here have windows equivalents.

===File Folder Organization===

Make sure you can write and compile java code on Eclipse before moving on to the next step.

===Java===

You will need a working version of Java on your computer to compile Android code. Sometimes you can run into problems if the version of Java you are using is not the official java. Oracle is the company responsible for the official java download at the time of this writing.

For distributions of linux that use complex packaging systems, java can usually be downloaded as a package. In a debian-based linux system, more than one version of Java is available. The command `update-alternatives` may be employed to make sure that the correct java implementation is being used on your system after the java packages are downloaded. 

You are interested in java 'jre' and java 'jdk', as well as anything else they require to operate correctly. Java 'jre' is the 'Java Runtime Environment' and it allows you to run Java programs. Java 'jdk' is the 'Java Development Kit' and it allows you to compile Java programs.

Java linux packages install to special directories reserved for programs and their associated files. You do not have to worry about where your system puts the Java packages as it installs them. Similarly Java Windows installers place the java software where it needs to be, and you usually don't need to worry about its location.

===Eclipse===

At the time of this writing, if you go to the Eclipse IDE web site, you'll find that the most recent version of Eclipse is 'Eclipse Helios' version 3.6.1 however that version won't work with the Android Development Kit. The link for the eclipse home page is:

http://www.eclipse.org/

The main reason for using this version of Eclipse is because of the compatibility with the Android development software. In the future this software will certainly be updated, so later versions of Eclipse may work for you. 

====Download Eclipse====

Go to the eclipse home page and click the button for downloads. Do not download Eclipse Helios on this page. Look for a link for 'Older Versions'. Awesomeguy was written on 'Galileo' version 3.5.2. 

For linux users the file that you download will be called something like '`eclipse-java-galileo-SR2-linux-gtk.tar.gz`'. Set the eclipse `tar.gz` package aside.

====Unpack Eclipse====

Unpacking Eclipse on a linux system can be accomplished using a gtk application like 'file-roller' or you can use the 'tar' command from the command line. We'll cover the command line option. First place the 'tar.gz' file that you downloaded in the location that you want Eclipse to actually be in. Then type the command below.

{{{
tar xvzf eclipse-java-galileo-SR2-linux-gtk.tar.gz
}}} 

You can use tab completion to make sure that you're spelling the name of the Eclipse download correctly. The 'tar' program will unpack the 'tar.gz' file and place the Eclipse folder in the current directory. After this is done you will have a directory named 'eclipse' and also the original downloaded file in your directory. You can dispose of the original download, or save it somewhere for safe keeping as you like.

====Running Eclipse====

Assuming that you are still in the directory where you unpacked eclipse, and assuming the eclipse program is installed in a directory called 'eclipse', and assuming you're on a linux operating system, you can run eclipse by typing 'eclipse/eclipse' at the command line. You might want to make a launcher of some kind on your desktop, but doing so is beyond the scope of this wiki.

If you are on a Windows operating system, the name of the eclipse executable is 'eclipse.exe' and the name of the eclipse folder will vary with the exact version you've downloaded. Still, the concept for starting the executable is the same. You type some variation on the following 
{{{
c:\path\to\eclipse\eclipse.exe 
}}}

===Android SDK===

====Download Android SDK====

====Unpack Android SDK====

===Android NDK===

====Download Android NDK====

====Unpack Android NDK====